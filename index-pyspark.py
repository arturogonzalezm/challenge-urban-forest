# you could do with some help from the given types and functions ;)
# below are some usage examples
from polygon_utils import *

# Carlton Gardens polygon
carltonGardensPerimeterLoop = [
    (144.970087, -37.800805), (144.974108, -37.801204), (144.973073, -37.807611), (144.968972, -37.807191)
]
carltonGardensLakeLoop = [
    (144.969768, -37.805891), (144.970074, -37.806206), (144.969954, -37.806332), (144.969583, -37.806153),
    (144.969689, -37.805985)
]
carltonGardensPolygon = [carltonGardensPerimeterLoop, carltonGardensLakeLoop]

# Royal Exhibition Building polygon
exhibitionBuildingPolygon = [
    [
        (144.972502, -37.804601), (144.972396, -37.805126), (144.970485, -37.804884), (144.970565, -37.804350),
        (144.971369, -37.804443), (144.971420, -37.804191), (144.971804, -37.804228), (144.971760, -37.804487)
    ]
]

# WeWork block polygon
weWorkBlockPolygon = [
    [
        (144.963286, -37.814212), (144.964498, -37.813854), (144.964962, -37.814806), (144.963711, -37.815168)
    ]
]
test_polygon_1 = [[[[144.974079984,-37.75927600899996],[144.9740860060001,-37.75923499499993],[144.9738775180001,-37.759211258999976],[144.9738900010001,-37.75913200499997],[144.97391000300001,-37.759015991999945],[144.97396559300012,-37.75870125099994],[144.97343353200006,-37.75863879499997],[144.97221530900003,-37.75849641899999],[144.9718280070001,-37.75845113099996],[144.97005564000006,-37.75824387599994],[144.9698756580001,-37.75926698099994],[144.97050061100003,-37.75933979699994],[144.97093032600003,-37.75938983999998],[144.9716583180001,-37.75947462499994],[144.9717951570001,-37.759490552999985],[144.97285690600006,-37.75961418899994],[144.9738259070001,-37.75972707599993],[144.9739976400001,-37.75974705599998],[144.97404600200002,-37.75946600399993]]]]
test_polygon_2 = [[[[144.968065915,-37.76141466399997],[144.96715907300006,-37.76130819699995],[144.966623399,-37.761245333999966],[144.96636034300002,-37.76121445799998],[144.96627916700004,-37.76120492999997],[144.96503006500006,-37.76105835499994],[144.96381866600007,-37.76091614499996],[144.96319334800012,-37.76084271799993],[144.96310571100003,-37.76135069199995],[144.96303278400012,-37.76177232499998],[144.96283199800007,-37.76292100899997],[144.96275122400004,-37.76339934499999],[144.96324087100004,-37.76345514099995],[144.9637252990001,-37.763510344999936],[144.9645530460001,-37.76360463899994],[144.9652647590001,-37.76368581699995],[144.96563377400003,-37.76372784899996],[144.9664761580001,-37.763823863999974],[144.96761915500008,-37.76395229099996],[144.9677592060001,-37.763158584999985],[144.96783830100003,-37.76270885099996]]]]
carltonGardensArea = multi_polygon_area([carltonGardensPolygon])
print(carltonGardensArea)
exhibitionBuildingArea = multi_polygon_area([exhibitionBuildingPolygon])
print(exhibitionBuildingArea)
weWorkBlockArea = multi_polygon_area([weWorkBlockPolygon])
print(weWorkBlockArea)

test_1 = multi_polygon_area(test_polygon_1)
print(test_1)
test_2 = multi_polygon_area(test_polygon_2)
print(test_2)

test_merged = merge_multi_polygons(test_polygon_1, test_polygon_2)
print(multi_polygon_area(test_merged))


merge = merge_multi_polygons([exhibitionBuildingPolygon], [weWorkBlockPolygon])


def approximately(a, b):
    return abs(a - b) < 0.000000001


assert approximately((exhibitionBuildingArea + weWorkBlockArea), multi_polygon_area(merge))

assert may_intersect([carltonGardensPolygon], [exhibitionBuildingPolygon])
assert intersection_area([carltonGardensPolygon], [exhibitionBuildingPolygon]) > 0.0

assert not may_intersect([carltonGardensPolygon], [weWorkBlockPolygon])
assert intersection_area([carltonGardensPolygon], [weWorkBlockPolygon]) == 0.0
